import asyncio
import threading
import time
import re
import sys
import ai

c = 0
REPORT = dict()
FINISHED = 0
async def find4word(query, text):
    res = 0
    global c
    for w in text.lower().split():
        res += await ai.ask(query, re.sub(r'\W+', '', w))
        c += 1
        print(c)
    return res

async def iterate_all(queries, text):
    report = dict()
    for q in queries.lower().split(','):
        q = re.sub(r'\W+', '', q).strip()
        report[q] = await find4word(q, text)
    print(report)
    with open('result.txt', 'w') as f:
        f.write("; ".join(f"{k}:{v}" for k, v in report.items()))

def iterate_all_threads(queries, text):
    global FINISHED
    global REPORT
    thread_array = []
    for q in queries.lower().split(','):
        def find4word():
            res = 0
            global FINISHED
            global c
            global REPORT
            c -= 1
            for w in text.lower().split():
                res += ai.ask_sync(q, re.sub(r'\W+', '', w))
                c += 1
                print(c)
            REPORT[q] = res
            c += 1
        thread_array.append(threading.Thread(target=find4word))
    for t in thread_array:
        t.start()
    while True:
        time.sleep(0.3)
        print(FINISHED)
        if FINISHED >= 0:
            break
    print(REPORT)




if __name__ == '__main__':
    quer = 'Дизайнерская обстановка, Дружелюбная атмосфера, Роскошная обстановка, Современная обстановка, , Блюда из птицы, Вегетарианская еда, Впечатления от питания, Гарниры/соусы, Десерты и фрукты, Еда, Завтрак, Закуски, Мясо, Рыба/морепродукты, Салаты, Стоимость Еды, Стоимость завтрака, Супы, Ужин, Чистота обеденной зоны, Обслуживание WiFi, Стоимость интернета, Кондиционер, Кровати, Обслуживание кондиционера, Размер ванной комнаты, Размер номера, Температура в Комнате, Шум, Алкогольные напитки, Безалкогольные напитки, Вина, Горячие напитки, Сервис на баре, Стоимость напитков, Балкон, Ванная комната, Вид, Душ, Кондиционер, Кровати, Кухня, Мебель, Минибар, Обслуживание Душевой, Обслуживание Мебели, Обслуживание Мини-бара, Обслуживание Телевизора, Обслуживание кондиционера, Поддержание ванной комнаты, Размер ванной комнаты, Размер номера, Старый/Новый номер, Телевизор, Температура в Комнате, Техническое обслуживание номеров, Чистота Душевой, Чистота в номере, Чистота ванной комнаты, Чистота кроватей, Чистота мебели, Шум, Бизнес-отель, Бутик-отель, Городской отель, Курортный отель, Отель для зимних видов спорта, Отель-люкс, Семейный отель, Содержание отеля, Хостел, Чистота в отеле, Чистота на пляже, Магазины, Парковка, Расстояние до объектов зимних видов спорта, Расстояние до пляжа, Рестораны и бары, Стоимость парковки, Удаленность от железнодорожной станции, Шоппинг/достопримечательности, Экскурсии, Дружелюбие, Команда аниматоров, Менеджмент, Обслуживание номеров, Охрана отеля, Персонал оздоровительного центра, Профессионализм, Ресепшн, Сервис в ресторане, Сервис на баре, Содержание отеля, Услуги Консьержа, Услуги парковщика, Услуги прачечной, Уход за детьми, Зимние виды спорта, Место для хранения лыж, Спортивное оборудование на открытом воздухе, Фитнес зона, Соотношение цены и качества, Стоимость Еды, Стоимость завтрака, Стоимость интернета, Стоимость напитков, Стоимость парковки, Архитектура, Бизнес-центр, Входной холл, Детская площадка, Здание, Лифт, Старые/новые удобства, Территория, Чистота Душевой, Чистота в номере, Чистота в отеле, Чистота ванной комнаты, Чистота кроватей, Чистота мебели, Чистота обеденной зоны'
    txt = 'Вполне достойное место. Ценник конечно завышен, но отдохнули, перезагрузились. Питание отличное. Номера чистые, все работает. Персонал ненавязчивый. Виды нереальные. Рядом ресторан есть, все безумно вкусно готовят. Удостоены звезды Мишлен. Очень рада, что выбрали этот отель.'
    asyncio.run(iterate_all(quer, txt))
    #iterate_all_threads(quer, txt)